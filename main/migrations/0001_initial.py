# Generated by Django 3.2.2 on 2021-05-07 12:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='город')),
            ],
            options={
                'verbose_name': 'город',
                'verbose_name_plural': 'города',
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Cloudiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='общая облачность')),
                ('scale', models.IntegerField(null=True, verbose_name='градация')),
            ],
            options={
                'verbose_name': 'общая облачность',
                'verbose_name_plural': 'общая облачность',
                'db_table': 'cloudiness',
            },
        ),
        migrations.CreateModel(
            name='CloudinessCl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='общая облачность')),
                ('scale', models.IntegerField(null=True, verbose_name='градация')),
            ],
            options={
                'verbose_name': 'процент наблюдающихся облаков',
                'verbose_name_plural': 'процент наблюдающихся облаков',
                'db_table': 'cloudiness_cl',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
            ],
            options={
                'verbose_name': 'страна',
                'verbose_name_plural': 'страны',
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='WindDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='направление ветра (румбы) на высоте 10 - 12 м над земной поверхностью, осреднённое за 10-минутный период, непосредственно предшествующий сроку наблюдения')),
            ],
            options={
                'verbose_name': 'направление ветра',
                'verbose_name_plural': 'направления ветра',
                'db_table': 'wind_directions',
            },
        ),
        migrations.CreateModel(
            name='WeatherStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='идентификатор')),
                ('latitude', models.FloatField(verbose_name='широта метеорологической станции')),
                ('longitude', models.FloatField(verbose_name='долгота метеорологической станции')),
                ('rp5_link', models.CharField(max_length=255, verbose_name='ссылка на метеостанцию, rp5')),
                ('last_date', models.DateField(null=True, verbose_name='дата последней загрузки')),
                ('data_type', models.CharField(max_length=50, verbose_name='метеостанция, METAR, метеодатчик')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.city', verbose_name='город')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.country', verbose_name='страна')),
            ],
            options={
                'verbose_name': 'метеостанция',
                'verbose_name_plural': 'метеостанции',
                'db_table': 'weather_stations',
            },
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='дата и время')),
                ('temperature', models.DecimalField(decimal_places=1, max_digits=3, null=True, verbose_name='температура воздуха, (°С) на высоте 2 м над поверхностью земли')),
                ('pressure', models.DecimalField(decimal_places=1, max_digits=4, null=True, verbose_name='атмосферное давление на уровне станции (миллиметры ртутного столба)')),
                ('pressure_converted', models.DecimalField(decimal_places=1, max_digits=4, null=True, verbose_name='атмосферное давление, приведённое к среднему уровню моря (миллиметры ртутного столба)')),
                ('baric_trend', models.DecimalField(decimal_places=1, max_digits=4, null=True, verbose_name='барическая тенденция: изменение атмосферного давления за последние 3 часа (миллиметры ртутного столба)')),
                ('humidity', models.IntegerField(null=True, verbose_name='относительная влажность (%) на высоте 2 м над поверхностью земли')),
                ('wind_speed', models.IntegerField(null=True, verbose_name='скорость ветра на высоте 10-12 м над земной поверхностью, осреднённая за 10-минутный период, непосредственно предшествующий сроку наблюдения (метры в секунду)')),
                ('max_wind_speed', models.IntegerField(null=True, verbose_name='максимальное значение порыва ветра на высоте 10-12 метров над земной поверхностью за 10-минутный период, непосредственно предшествующий сроку наблюдения (метры в секунду)')),
                ('max_wind_speed_between', models.IntegerField(null=True, verbose_name='максимальное значение порыва ветра на высоте 10-12 метров над земной поверхностью за период между сроками (метры в секунду)')),
                ('current_weather', models.TextField(null=True, verbose_name='текущая погода, сообщаемая с метеорологической станции')),
                ('past_weather', models.CharField(max_length=255, null=True, verbose_name='прошедшая погода между сроками наблюдения 1')),
                ('past_weather_two', models.CharField(max_length=255, null=True, verbose_name='прошедшая погода между сроками наблюдения 2')),
                ('min_temperature', models.DecimalField(decimal_places=1, max_digits=3, null=True, verbose_name='минимальная температура воздуха (°С) за прошедший период (не более 12 часов)')),
                ('max_temperature', models.DecimalField(decimal_places=1, max_digits=3, null=True, verbose_name='максимальная температура воздуха (°С) за прошедший период (не более 12 часов)')),
                ('cloud_cl', models.CharField(max_length=255, null=True, verbose_name='слоисто-кучевые, слоистые, кучевые и кучево-дождевые облака (Cl)')),
                ('cloud_hight', models.CharField(max_length=255, null=True, verbose_name='высота основания самых низких облаков (м)')),
                ('cloud_cm', models.CharField(max_length=255, null=True, verbose_name='высококучевые, высокослоистые и слоисто-дождевые облака (Cm)')),
                ('cloud_three', models.CharField(max_length=255, null=True, verbose_name='перистые, перисто-кучевые и перисто-слоистые облака')),
                ('visibility', models.DecimalField(decimal_places=1, max_digits=3, null=True, verbose_name='горизонтальная дальность видимости (км)')),
                ('dew_point', models.DecimalField(decimal_places=1, max_digits=3, null=True, verbose_name='температура точки росы на высоте 2 метра над поверхностью земли (°С)')),
                ('rainfall', models.CharField(max_length=50, null=True, verbose_name='количество выпавших осадков (мм)')),
                ('rainfall_time', models.IntegerField(null=True, verbose_name='период времени за который накоплено указанное количество осадков (часы)')),
                ('soil_condition', models.CharField(max_length=255, null=True, verbose_name='состояние поверхности почвы без снега или измеримого ледяного покрова')),
                ('soil_temperature', models.DecimalField(decimal_places=1, max_digits=3, null=True, verbose_name='минимальная температура поверхности почвы за ночь (°С)')),
                ('soil_with_snow', models.CharField(max_length=255, null=True, verbose_name='состояние поверхности почвы со снегом или измеримым ледяным покровом')),
                ('snow_hight', models.CharField(max_length=255, null=True, verbose_name='высота снежного покрова (см)')),
                ('cloud_count', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cloudinesscl', verbose_name='количество всех наблюдающихся облаков Cl или, при отсутствии облаков Cl, количество всех наблюдающихся облаков Cm')),
                ('cloud_cover', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.cloudiness', verbose_name='общая облачность (%)')),
                ('weather_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.weatherstation', verbose_name='метеостанция')),
                ('wind_direction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.winddirection', verbose_name='направление ветра (румбы) на высоте 10 - 12 м над земной поверхностью, осреднённое за 10-минутный период, непосредственно предшествующий сроку наблюдения')),
            ],
            options={
                'verbose_name': 'погода',
                'verbose_name_plural': 'погода',
                'db_table': 'weather',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.country', verbose_name='страна'),
        ),
    ]
